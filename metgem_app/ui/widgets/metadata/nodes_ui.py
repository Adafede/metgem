# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'E:\git\metgem\metgem_app\ui\widgets\metadata\nodes.ui',
# licensing of 'E:\git\metgem\metgem_app\ui\widgets\metadata\nodes.ui' applies.
#
# Created: Sat Mar  5 14:43:10 2022
#      by: pyside2-uic  running on PySide2 5.13.2
#
# WARNING! All changes made in this file will be lost!

from PySide2 import QtCore, QtGui, QtWidgets

class Ui_NodesWidget(object):
    def setupUi(self, NodesWidget):
        NodesWidget.setObjectName("NodesWidget")
        NodesWidget.resize(825, 412)
        NodesWidget.setWindowTitle("")
        self.verticalLayout = QtWidgets.QVBoxLayout(NodesWidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.btUseColumnForLabels = QtWidgets.QToolButton(NodesWidget)
        self.btUseColumnForLabels.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/images/node-label.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btUseColumnForLabels.setIcon(icon)
        self.btUseColumnForLabels.setIconSize(QtCore.QSize(24, 24))
        self.btUseColumnForLabels.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)
        self.btUseColumnForLabels.setObjectName("btUseColumnForLabels")
        self.horizontalLayout.addWidget(self.btUseColumnForLabels)
        self.btUseColumnsForPieCharts = QtWidgets.QToolButton(NodesWidget)
        self.btUseColumnsForPieCharts.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/images/node-pie.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btUseColumnsForPieCharts.setIcon(icon1)
        self.btUseColumnsForPieCharts.setIconSize(QtCore.QSize(24, 24))
        self.btUseColumnsForPieCharts.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)
        self.btUseColumnsForPieCharts.setObjectName("btUseColumnsForPieCharts")
        self.horizontalLayout.addWidget(self.btUseColumnsForPieCharts)
        self.btUseColumnForNodesSizes = QtWidgets.QToolButton(NodesWidget)
        self.btUseColumnForNodesSizes.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/images/node-size.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btUseColumnForNodesSizes.setIcon(icon2)
        self.btUseColumnForNodesSizes.setIconSize(QtCore.QSize(24, 24))
        self.btUseColumnForNodesSizes.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)
        self.btUseColumnForNodesSizes.setObjectName("btUseColumnForNodesSizes")
        self.horizontalLayout.addWidget(self.btUseColumnForNodesSizes)
        self.btUseColumnForNodesColors = QtWidgets.QToolButton(NodesWidget)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/images/node-color.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btUseColumnForNodesColors.setIcon(icon3)
        self.btUseColumnForNodesColors.setIconSize(QtCore.QSize(24, 24))
        self.btUseColumnForNodesColors.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)
        self.btUseColumnForNodesColors.setObjectName("btUseColumnForNodesColors")
        self.horizontalLayout.addWidget(self.btUseColumnForNodesColors)
        self.btUseColumnForNodesPixmaps = QtWidgets.QToolButton(NodesWidget)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/images/node-structure.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btUseColumnForNodesPixmaps.setIcon(icon4)
        self.btUseColumnForNodesPixmaps.setIconSize(QtCore.QSize(24, 24))
        self.btUseColumnForNodesPixmaps.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)
        self.btUseColumnForNodesPixmaps.setObjectName("btUseColumnForNodesPixmaps")
        self.horizontalLayout.addWidget(self.btUseColumnForNodesPixmaps)
        self.line = QtWidgets.QFrame(NodesWidget)
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.horizontalLayout.addWidget(self.line)
        self.btHighlightSelectedNodes = QtWidgets.QToolButton(NodesWidget)
        self.btHighlightSelectedNodes.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icons/images/highlight-yellow.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btHighlightSelectedNodes.setIcon(icon5)
        self.btHighlightSelectedNodes.setIconSize(QtCore.QSize(24, 24))
        self.btHighlightSelectedNodes.setObjectName("btHighlightSelectedNodes")
        self.horizontalLayout.addWidget(self.btHighlightSelectedNodes)
        self.btShowSpectrum = QtWidgets.QToolButton(NodesWidget)
        self.btShowSpectrum.setText("")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icons/images/spectrum.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btShowSpectrum.setIcon(icon6)
        self.btShowSpectrum.setIconSize(QtCore.QSize(24, 24))
        self.btShowSpectrum.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)
        self.btShowSpectrum.setObjectName("btShowSpectrum")
        self.horizontalLayout.addWidget(self.btShowSpectrum)
        self.btFindStandards = QtWidgets.QToolButton(NodesWidget)
        self.btFindStandards.setText("")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/icons/images/library-query.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btFindStandards.setIcon(icon7)
        self.btFindStandards.setIconSize(QtCore.QSize(24, 24))
        self.btFindStandards.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)
        self.btFindStandards.setObjectName("btFindStandards")
        self.horizontalLayout.addWidget(self.btFindStandards)
        self.line_2 = QtWidgets.QFrame(NodesWidget)
        self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.horizontalLayout.addWidget(self.line_2)
        self.btAddColumnsByFormulae = QtWidgets.QToolButton(NodesWidget)
        self.btAddColumnsByFormulae.setText("")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/icons/images/calculator.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btAddColumnsByFormulae.setIcon(icon8)
        self.btAddColumnsByFormulae.setIconSize(QtCore.QSize(24, 24))
        self.btAddColumnsByFormulae.setObjectName("btAddColumnsByFormulae")
        self.horizontalLayout.addWidget(self.btAddColumnsByFormulae)
        self.btClusterize = QtWidgets.QToolButton(NodesWidget)
        self.btClusterize.setText("")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/icons/images/cluster.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btClusterize.setIcon(icon9)
        self.btClusterize.setIconSize(QtCore.QSize(24, 24))
        self.btClusterize.setObjectName("btClusterize")
        self.horizontalLayout.addWidget(self.btClusterize)
        self.btDeleteColumns = QtWidgets.QToolButton(NodesWidget)
        self.btDeleteColumns.setText("")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/icons/images/list-remove.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btDeleteColumns.setIcon(icon10)
        self.btDeleteColumns.setIconSize(QtCore.QSize(24, 24))
        self.btDeleteColumns.setObjectName("btDeleteColumns")
        self.horizontalLayout.addWidget(self.btDeleteColumns)
        self.line_3 = QtWidgets.QFrame(NodesWidget)
        self.line_3.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.horizontalLayout.addWidget(self.line_3)
        self.btFreezeFirstColumn = QtWidgets.QToolButton(NodesWidget)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/icons/images/freeze_first_column.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btFreezeFirstColumn.setIcon(icon11)
        self.btFreezeFirstColumn.setIconSize(QtCore.QSize(24, 24))
        self.btFreezeFirstColumn.setObjectName("btFreezeFirstColumn")
        self.horizontalLayout.addWidget(self.btFreezeFirstColumn)
        self.btFreezeColumns = QtWidgets.QToolButton(NodesWidget)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/icons/images/freeze_columns.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btFreezeColumns.setIcon(icon12)
        self.btFreezeColumns.setIconSize(QtCore.QSize(24, 24))
        self.btFreezeColumns.setObjectName("btFreezeColumns")
        self.horizontalLayout.addWidget(self.btFreezeColumns)
        self.btSetAlternatingRowColors = QtWidgets.QToolButton(NodesWidget)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/icons/images/alternating_row_colors.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btSetAlternatingRowColors.setIcon(icon13)
        self.btSetAlternatingRowColors.setIconSize(QtCore.QSize(24, 24))
        self.btSetAlternatingRowColors.setObjectName("btSetAlternatingRowColors")
        self.horizontalLayout.addWidget(self.btSetAlternatingRowColors)
        self.btEnableOrdering = QtWidgets.QToolButton(NodesWidget)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/icons/images/enable_ordering.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btEnableOrdering.setIcon(icon14)
        self.btEnableOrdering.setIconSize(QtCore.QSize(24, 24))
        self.btEnableOrdering.setObjectName("btEnableOrdering")
        self.horizontalLayout.addWidget(self.btEnableOrdering)
        self.btSetColumnsMovable = QtWidgets.QToolButton(NodesWidget)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/icons/images/enable_move_columns.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btSetColumnsMovable.setIcon(icon15)
        self.btSetColumnsMovable.setIconSize(QtCore.QSize(24, 24))
        self.btSetColumnsMovable.setObjectName("btSetColumnsMovable")
        self.horizontalLayout.addWidget(self.btSetColumnsMovable)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.tvNodes = NodeTableView(NodesWidget)
        self.tvNodes.setAlternatingRowColors(True)
        self.tvNodes.setObjectName("tvNodes")
        self.verticalLayout.addWidget(self.tvNodes)
        self.actionViewSpectrum = QtWidgets.QAction(NodesWidget)
        self.actionViewSpectrum.setIcon(icon6)
        self.actionViewSpectrum.setObjectName("actionViewSpectrum")
        self.actionViewCompareSpectrum = QtWidgets.QAction(NodesWidget)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/icons/images/spectrum-inverted.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionViewCompareSpectrum.setIcon(icon16)
        self.actionViewCompareSpectrum.setObjectName("actionViewCompareSpectrum")
        self.actionFindStandards = QtWidgets.QAction(NodesWidget)
        self.actionFindStandards.setIcon(icon7)
        self.actionFindStandards.setObjectName("actionFindStandards")
        self.actionFindAnalogs = QtWidgets.QAction(NodesWidget)
        self.actionFindAnalogs.setIcon(icon7)
        self.actionFindAnalogs.setObjectName("actionFindAnalogs")
        self.actionResetPieColorMapping = QtWidgets.QAction(NodesWidget)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/icons/images/node-empty.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionResetPieColorMapping.setIcon(icon17)
        self.actionResetPieColorMapping.setObjectName("actionResetPieColorMapping")
        self.actionUseColumnsForPieCharts = QtWidgets.QAction(NodesWidget)
        self.actionUseColumnsForPieCharts.setIcon(icon1)
        self.actionUseColumnsForPieCharts.setObjectName("actionUseColumnsForPieCharts")
        self.actionResetLabelMapping = QtWidgets.QAction(NodesWidget)
        self.actionResetLabelMapping.setIcon(icon)
        self.actionResetLabelMapping.setObjectName("actionResetLabelMapping")
        self.actionUseColumnForLabels = QtWidgets.QAction(NodesWidget)
        self.actionUseColumnForLabels.setIcon(icon)
        self.actionUseColumnForLabels.setObjectName("actionUseColumnForLabels")
        self.actionResetSizeMapping = QtWidgets.QAction(NodesWidget)
        self.actionResetSizeMapping.setIcon(icon2)
        self.actionResetSizeMapping.setObjectName("actionResetSizeMapping")
        self.actionUseColumnForNodesSizes = QtWidgets.QAction(NodesWidget)
        self.actionUseColumnForNodesSizes.setIcon(icon2)
        self.actionUseColumnForNodesSizes.setObjectName("actionUseColumnForNodesSizes")
        self.actionResetColorMapping = QtWidgets.QAction(NodesWidget)
        self.actionResetColorMapping.setIcon(icon3)
        self.actionResetColorMapping.setObjectName("actionResetColorMapping")
        self.actionUseColumnForNodesColors = QtWidgets.QAction(NodesWidget)
        self.actionUseColumnForNodesColors.setIcon(icon3)
        self.actionUseColumnForNodesColors.setObjectName("actionUseColumnForNodesColors")
        self.actionHighlightSelectedNodes = QtWidgets.QAction(NodesWidget)
        self.actionHighlightSelectedNodes.setIcon(icon5)
        self.actionHighlightSelectedNodes.setObjectName("actionHighlightSelectedNodes")
        self.actionAddColumnsByFormulae = QtWidgets.QAction(NodesWidget)
        self.actionAddColumnsByFormulae.setIcon(icon8)
        self.actionAddColumnsByFormulae.setObjectName("actionAddColumnsByFormulae")
        self.actionClusterize = QtWidgets.QAction(NodesWidget)
        self.actionClusterize.setIcon(icon9)
        self.actionClusterize.setObjectName("actionClusterize")
        self.actionDeleteColumns = QtWidgets.QAction(NodesWidget)
        self.actionDeleteColumns.setIcon(icon10)
        self.actionDeleteColumns.setObjectName("actionDeleteColumns")
        self.actionFreezeColumns = QtWidgets.QAction(NodesWidget)
        self.actionFreezeColumns.setCheckable(True)
        self.actionFreezeColumns.setIcon(icon12)
        self.actionFreezeColumns.setObjectName("actionFreezeColumns")
        self.actionFreezeFirstColumn = QtWidgets.QAction(NodesWidget)
        self.actionFreezeFirstColumn.setCheckable(True)
        self.actionFreezeFirstColumn.setIcon(icon11)
        self.actionFreezeFirstColumn.setObjectName("actionFreezeFirstColumn")
        self.actionSetAlternatingRowColors = QtWidgets.QAction(NodesWidget)
        self.actionSetAlternatingRowColors.setCheckable(True)
        self.actionSetAlternatingRowColors.setChecked(True)
        self.actionSetAlternatingRowColors.setIcon(icon13)
        self.actionSetAlternatingRowColors.setObjectName("actionSetAlternatingRowColors")
        self.actionEnableOrdering = QtWidgets.QAction(NodesWidget)
        self.actionEnableOrdering.setCheckable(True)
        self.actionEnableOrdering.setIcon(icon14)
        self.actionEnableOrdering.setObjectName("actionEnableOrdering")
        self.actionSetColumnsMovable = QtWidgets.QAction(NodesWidget)
        self.actionSetColumnsMovable.setCheckable(True)
        self.actionSetColumnsMovable.setIcon(icon15)
        self.actionSetColumnsMovable.setObjectName("actionSetColumnsMovable")
        self.actionUseColumnForNodesPixmaps = QtWidgets.QAction(NodesWidget)
        self.actionUseColumnForNodesPixmaps.setIcon(icon4)
        self.actionUseColumnForNodesPixmaps.setObjectName("actionUseColumnForNodesPixmaps")
        self.actionResetPixmapMapping = QtWidgets.QAction(NodesWidget)
        self.actionResetPixmapMapping.setIcon(icon4)
        self.actionResetPixmapMapping.setObjectName("actionResetPixmapMapping")
        self.actionMetFrag = QtWidgets.QAction(NodesWidget)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/icons/images/metfrag.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionMetFrag.setIcon(icon18)
        self.actionMetFrag.setObjectName("actionMetFrag")
        self.actionCFMID = QtWidgets.QAction(NodesWidget)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/icons/images/cfm-id.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCFMID.setIcon(icon19)
        self.actionCFMID.setObjectName("actionCFMID")

        self.retranslateUi(NodesWidget)
        QtCore.QMetaObject.connectSlotsByName(NodesWidget)

    def retranslateUi(self, NodesWidget):
        self.btUseColumnForLabels.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Use selected column as source for nodes\' labels", None, -1))
        self.btUseColumnForLabels.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Use selected column as source for nodes\' labels", None, -1))
        self.btUseColumnsForPieCharts.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Use selected columns as source for nodes\' pie charts", None, -1))
        self.btUseColumnsForPieCharts.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Use selected columns as source for nodes\' pie charts", None, -1))
        self.btUseColumnForNodesSizes.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Use selected columns as source for nodes\' sizes", None, -1))
        self.btUseColumnForNodesSizes.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Use selected columns as source for nodes\' sizes", None, -1))
        self.btUseColumnForNodesColors.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Use selected columns as source for nodes\' colors", None, -1))
        self.btUseColumnForNodesColors.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Use selected columns as source for nodes\' colors", None, -1))
        self.btUseColumnForNodesColors.setText(QtWidgets.QApplication.translate("NodesWidget", "...", None, -1))
        self.btUseColumnForNodesPixmaps.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Use selected columns as source for nodes\' colors", None, -1))
        self.btUseColumnForNodesPixmaps.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Use selected columns as source for nodes\' colors", None, -1))
        self.btUseColumnForNodesPixmaps.setText(QtWidgets.QApplication.translate("NodesWidget", "...", None, -1))
        self.btHighlightSelectedNodes.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Highlight in network views the selected nodes in the table", None, -1))
        self.btHighlightSelectedNodes.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Highlight in network views the selected nodes in the table", None, -1))
        self.btShowSpectrum.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Show the spectrum associated to the selected node", None, -1))
        self.btShowSpectrum.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Show the spectrum associated to the selected node", None, -1))
        self.btFindStandards.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Search for known spectra in library similar to the selected nodes\' spectra", None, -1))
        self.btFindStandards.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Search for known spectra in library similar to the selected nodes\' spectra", None, -1))
        self.btAddColumnsByFormulae.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Edit Group Mapping", None, -1))
        self.btAddColumnsByFormulae.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Edit Group Mapping", None, -1))
        self.btClusterize.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Find clusters in data and put each node in a cluster", None, -1))
        self.btClusterize.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Find clusters in data and put each node in a cluster", None, -1))
        self.btDeleteColumns.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Remove selected columns", None, -1))
        self.btDeleteColumns.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Remove selected columns", None, -1))
        self.btFreezeFirstColumn.setText(QtWidgets.QApplication.translate("NodesWidget", "...", None, -1))
        self.btFreezeColumns.setText(QtWidgets.QApplication.translate("NodesWidget", "...", None, -1))
        self.btSetAlternatingRowColors.setText(QtWidgets.QApplication.translate("NodesWidget", "...", None, -1))
        self.btEnableOrdering.setText(QtWidgets.QApplication.translate("NodesWidget", "...", None, -1))
        self.btSetColumnsMovable.setText(QtWidgets.QApplication.translate("NodesWidget", "...", None, -1))
        self.actionViewSpectrum.setText(QtWidgets.QApplication.translate("NodesWidget", "View Spectrum", None, -1))
        self.actionViewSpectrum.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Show the spectrum associated to the selected node", None, -1))
        self.actionViewSpectrum.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Show the spectrum associated to the selected node", None, -1))
        self.actionViewCompareSpectrum.setText(QtWidgets.QApplication.translate("NodesWidget", "Compare Spectrum", None, -1))
        self.actionViewCompareSpectrum.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Compare the spectrum associated to the selected node to another one", None, -1))
        self.actionViewCompareSpectrum.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Compare the spectrum associated to the selected node to another one", None, -1))
        self.actionFindStandards.setText(QtWidgets.QApplication.translate("NodesWidget", "Find standards in library", None, -1))
        self.actionFindStandards.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Search for known spectra in library similar to the selected nodes\' spectra with same precursor ion", None, -1))
        self.actionFindStandards.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Search for known spectra in library similar to the selected nodes\' spectra with same precursor ion", None, -1))
        self.actionFindAnalogs.setText(QtWidgets.QApplication.translate("NodesWidget", "Find analogs in library", None, -1))
        self.actionFindAnalogs.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Search for known spectra in library similar to the selected nodes\' spectra with different precursor ion", None, -1))
        self.actionFindAnalogs.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Search for known spectra in library similar to the selected nodes\' spectra with different precursor ion", None, -1))
        self.actionResetPieColorMapping.setText(QtWidgets.QApplication.translate("NodesWidget", "Reset color mapping", None, -1))
        self.actionResetPieColorMapping.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Remove pie charts", None, -1))
        self.actionResetPieColorMapping.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Remove pie charts", None, -1))
        self.actionUseColumnsForPieCharts.setText(QtWidgets.QApplication.translate("NodesWidget", "Use Columns for Pie Charts", None, -1))
        self.actionUseColumnsForPieCharts.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Use selected columns as source for nodes\' pie charts", None, -1))
        self.actionUseColumnsForPieCharts.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Use selected columns as source for nodes\' pie charts", None, -1))
        self.actionResetLabelMapping.setText(QtWidgets.QApplication.translate("NodesWidget", "Reset label mapping", None, -1))
        self.actionResetLabelMapping.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Restore default nodes\' labels", None, -1))
        self.actionResetLabelMapping.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Restore default nodes\' labels", None, -1))
        self.actionUseColumnForLabels.setText(QtWidgets.QApplication.translate("NodesWidget", "Use Column for Labels", None, -1))
        self.actionUseColumnForLabels.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Use selected column as source for nodes\' labels", None, -1))
        self.actionUseColumnForLabels.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Use selected column as source for nodes\' labels", None, -1))
        self.actionResetSizeMapping.setText(QtWidgets.QApplication.translate("NodesWidget", "Reset size mapping", None, -1))
        self.actionResetSizeMapping.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Restore default nodes\' sizes", None, -1))
        self.actionResetSizeMapping.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Restore default nodes\' sizes", None, -1))
        self.actionUseColumnForNodesSizes.setText(QtWidgets.QApplication.translate("NodesWidget", "Use Column for Nodes Sizes", None, -1))
        self.actionUseColumnForNodesSizes.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Use selected column as source for nodes\' sizes", None, -1))
        self.actionUseColumnForNodesSizes.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Use selected column as source for nodes\' sizes", None, -1))
        self.actionResetColorMapping.setText(QtWidgets.QApplication.translate("NodesWidget", "Reset color mapping", None, -1))
        self.actionResetColorMapping.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Restore default nodes\' colors", None, -1))
        self.actionResetColorMapping.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Restore default nodes\' colors", None, -1))
        self.actionUseColumnForNodesColors.setText(QtWidgets.QApplication.translate("NodesWidget", "Use Column for Nodes Colors", None, -1))
        self.actionUseColumnForNodesColors.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Use selected column as source for nodes\' colors", None, -1))
        self.actionUseColumnForNodesColors.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Use selected column as source for nodes\' colors", None, -1))
        self.actionHighlightSelectedNodes.setText(QtWidgets.QApplication.translate("NodesWidget", "Highlight Selected Nodes", None, -1))
        self.actionHighlightSelectedNodes.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Highlight in network views the selected nodes in the table", None, -1))
        self.actionHighlightSelectedNodes.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Highlight in network views the selected nodes in the table", None, -1))
        self.actionAddColumnsByFormulae.setText(QtWidgets.QApplication.translate("NodesWidget", "Add new columns by formulae", None, -1))
        self.actionAddColumnsByFormulae.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Add new columns by combining existing ones using arithmetic formula", None, -1))
        self.actionAddColumnsByFormulae.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Add new columns by combining existing ones using arithmetic formula", None, -1))
        self.actionClusterize.setText(QtWidgets.QApplication.translate("NodesWidget", "Clusterize", None, -1))
        self.actionClusterize.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Find clusters in data and put each node in a cluster", None, -1))
        self.actionClusterize.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Find clusters in data and put each node in a cluster", None, -1))
        self.actionDeleteColumns.setText(QtWidgets.QApplication.translate("NodesWidget", "Delete Columns", None, -1))
        self.actionDeleteColumns.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Remove selected columns", None, -1))
        self.actionDeleteColumns.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Remove selected columns", None, -1))
        self.actionFreezeColumns.setText(QtWidgets.QApplication.translate("NodesWidget", "Freeze Columns", None, -1))
        self.actionFreezeColumns.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Freeze the columns to the left of the selected one", None, -1))
        self.actionFreezeColumns.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Freeze the columns to the left of the selected one", None, -1))
        self.actionFreezeFirstColumn.setText(QtWidgets.QApplication.translate("NodesWidget", "Freeze First Column", None, -1))
        self.actionFreezeFirstColumn.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Freeze the first column of the table", None, -1))
        self.actionFreezeFirstColumn.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Freeze the first column of the table", None, -1))
        self.actionSetAlternatingRowColors.setText(QtWidgets.QApplication.translate("NodesWidget", "Set Alternating Row Colors", None, -1))
        self.actionSetAlternatingRowColors.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Alternate background colors in table to improve readability", None, -1))
        self.actionSetAlternatingRowColors.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Alternate background colors in table to improve readability", None, -1))
        self.actionEnableOrdering.setText(QtWidgets.QApplication.translate("NodesWidget", "Enable Ordering", None, -1))
        self.actionEnableOrdering.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Enable ordering of table. Selection of columns is available only when sorting is disabled", None, -1))
        self.actionEnableOrdering.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Enable ordering of table. Selection of columns is available only when sorting is disabled", None, -1))
        self.actionSetColumnsMovable.setText(QtWidgets.QApplication.translate("NodesWidget", "Set Columns Movable", None, -1))
        self.actionSetColumnsMovable.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Allow to change order of columns", None, -1))
        self.actionSetColumnsMovable.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Allow to change order of columns", None, -1))
        self.actionUseColumnForNodesPixmaps.setText(QtWidgets.QApplication.translate("NodesWidget", "Use Column for Nodes Pixmaps", None, -1))
        self.actionUseColumnForNodesPixmaps.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Use selected column as source for nodes\' pixmap", None, -1))
        self.actionUseColumnForNodesPixmaps.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Use selected column as source for nodes\' colors", None, -1))
        self.actionResetPixmapMapping.setText(QtWidgets.QApplication.translate("NodesWidget", "Reset pixmap mapping", None, -1))
        self.actionResetPixmapMapping.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "Remove nodes\' pixmaps", None, -1))
        self.actionResetPixmapMapping.setStatusTip(QtWidgets.QApplication.translate("NodesWidget", "Restore default nodes\' colors", None, -1))
        self.actionMetFrag.setText(QtWidgets.QApplication.translate("NodesWidget", "MetFrag", None, -1))
        self.actionCFMID.setText(QtWidgets.QApplication.translate("NodesWidget", "CFM-ID", None, -1))
        self.actionCFMID.setToolTip(QtWidgets.QApplication.translate("NodesWidget", "CFM-ID", None, -1))

from metgem_app.ui.widgets.metadata.node import NodeTableView
import ui_rc
